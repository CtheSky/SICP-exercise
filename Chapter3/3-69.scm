(load "3.5.3.scm")

(define (triples s t u)
  (cons-stream (list (stream-car s)
		     (stream-car t)
		     (stream-car u))
	       (interleave (stream-map (lambda (pair) (cons (stream-car s) pair))
				       (stream-cdr (pairs t u)))
			   (triples (stream-cdr s)
				    (stream-cdr t)
				    (stream-cdr u)))))
(define pythagoras
  (stream-filter (lambda (pair)
		   (= (+ (square (car pair))
			 (square (cadr pair)))
		      (square (caddr pair))))
		 (triples integers integers integers)))
